https://neocities.org/api

* infra
** DONE set up website with flask on pi
** DONE set up services so website resets on pi reset
** DONE set up script for deploying to pi

* DONE pull in integration lib

* DONE serve list of reviews at /review
- sorted by time

* TODO parsing
** TODO edit pages to comply with parsable format
- start with just one, set up html parsing, test, do the rest
** TODO set up html parsing

* DONE serve static file (css)

* TODO formatting fixes
** DONE padding on top of title
** TODO fix stars
** TODO date format
** DONE? fix box on review

* edit interface v1
** DONE preview button
** TODO throttle edits
*** FE approach
frontend visually "queues" a save, waits until the previous save has finished
- would have to write js for this
- this is probably simplest
- can save the previous save time in localstorage so multiple files are ok
- lost on closing page though, which isn't nice

*** queue approach
table:
| neocities_path | str           |
| contents       | str           |
| time           | time          |
| saved_at       | time nullable |

when writing, check for recent saved_at
- if max(saved_at) > 1 minute ago:
  - save immediately, write rows for saved files with saved_at = time
- if max(saved_at) < 1 minute ago:
  - write rows with saved_at as null
  - if task is not kicked off (no null saved_at exists)
    - kick off a task that:
      - checks max(saved_at), then sleeps (1 minute - saved_at)
      - selects all rows with null saved_at and saves them to neocities
        - if there are dupe neocities_paths, use most recent by time

*** slow write endpoint on BE
- just sleeps until it's ready
- still have to keep track of saves

** TODO serve empty edit interface to review at /review/edit/<review-slug>
- edit interface should have main review and extra content section?
- extra content can be freeform, gets appended as is to review
** TODO fill edit interface with parsed html values
** DONE set up page for creating a new review on /review
- input and button, creates a new page at /review/<review-slug> but doesn't create it yet
** DONE set up writing to website: review page
** TODO set up writing to website: home page
- parse dates from list endpoint to get most recent ones
- fetch most recent articles, parse, show on main page

* TODO edit interface v2
** TODO show preview alongside edit interface
- pull css from site to show accurately
- iframe to isolate styles? or maybe just don't care and slam the styles in the page
** TODO better code editing experience? frontend lib?
codemirror seems legit and is free/open?
https://github.com/codemirror/dev/
https://codepen.io/DerkJanS/pen/EXMwVz
** TODO draft saving

* backups
** TODO when editing pages, back up old version on pi
- file format: YYYY-MM-DD-HH:MM:SS-YYYY-MM-DD-PATH
- mouse can let me know if these need to be revived

* TODO delete files in app
clean up home page conveniently

* TODO button to refresh home page template
can be useful for edits on reviews
