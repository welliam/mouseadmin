https://neocities.org/api

* infra
** DONE set up website with flask on pi
** DONE set up services so website resets on pi reset
** DONE set up script for deploying to pi

* DONE pull in integration lib

* DONE serve list of reviews at /review
- sorted by time

* TODO parsing
** TODO edit pages to comply with parsable format
- start with just one, set up html parsing, test, do the rest
** TODO set up html parsing

* TODO serve static file (css)

* edit interface
** TODO throttle edits
- how should this be done?
  - frontend visually "queues" a save, waits until the previous save has finished
    - should this be stored on the be?
  - be queues it, allows overwriting
- just sleep until previous save is up. can store this in memory probably
** TODO serve empty edit interface to review at /review/edit/<review-slug>
- edit interface should have main review and extra content section?
- extra content can be freeform, gets appended as is to review
** TODO prefill edit interface with parsed html values
** TODO show preview alongside edit interface
- pull css from site to show accurately
- iframe to isolate styles? or maybe just don't care and slam the styles in the page
** TODO set up page for creating a new review on /review
- input and button, creates a new page at /review/<review-slug> but doesn't create it yet
** TODO set up writing to website: review page
** TODO set up writing to website: home page
- parse dates from list endpoint to get most recent ones
- fetch most recent articles, parse, show on main page
** TODO better code editing experience? frontend lib?
codemirror seems legit and is free/open?
https://github.com/codemirror/dev/
https://codepen.io/DerkJanS/pen/EXMwVz

* backups
** TODO when editing pages, back up old version on pi
** TODO serve backups as is
** TODO list endpoint for backups /backup
